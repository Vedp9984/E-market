@startuml

class User {
    - user_id: str
    - name: str
    - email: str
    - password: str
    - is_logged_in: bool
    + login(password: str) -> bool
    + logout() -> None
    + to_dict() -> Dict
    + from_dict(data: Dict) -> User
}

class Customer {
    - order_history: List[str]
    + place_order(e_store: EStore, items: List[Dict], payment_method: str) -> Optional[Order]
    + view_order_history(e_store: EStore) -> None
    + get_discount() -> float
    + to_dict() -> Dict
    + from_dict(data: Dict) -> Customer
}

class RetailStore {
    - store_name: str
    - business_id: str
    + apply_bulk_discount() -> float
    + to_dict() -> Dict
    + from_dict(data: Dict) -> RetailStore
}

class Admin {
    + manage_products(e_store: EStore) -> None
    + view_orders(e_store: EStore) -> None
    + manage_delivery(e_store: EStore) -> None
}

class Product {
    - product_id: str
    - name: str
    - category: str
    - price: float
    - stock: int
    + update_stock(quantity_change: int) -> None
    + apply_discount(discount_percentage: float) -> float
    + to_dict() -> Dict
    + from_dict(data: Dict) -> Product
}

class Order {
    - order_id: str
    - customer: Customer
    - items: List[Dict]
    - payment_method: str
    - status: str
    - total_price: float
    - date: str
    - discount_applied: Optional[Discount]
    - payment: Optional[Payment]
    - delivery: Optional[Delivery]
    + calculate_total() -> float
    + apply_discount(discount: Discount) -> None
    + track_order() -> str
    + to_dict() -> Dict
}

class Payment {
    - payment_id: str
    - order_id: str
    - method: str
    - status: str
    + process_payment() -> bool
    + to_dict() -> Dict
    + from_dict(data: Dict) -> Payment
}

class Delivery {
    - delivery_id: str
    - order_id: str
    - status: str
    - expected_date: str
    + update_status(new_status: str) -> None
    + to_dict() -> Dict
    + from_dict(data: Dict) -> Delivery
}

class Discount {
    - discount_id: str
    - type: str
    - value: float
    + apply_discount(price: float) -> float
    + to_dict() -> Dict
    + from_dict(data: Dict) -> Discount
}

class EStore {
    - users: List[User]
    - products: List[Product]
    - orders: List[Order]
    - discounts: List[Discount]
    - payments: List[Payment]
    - deliveries: List[Delivery]
    + get_instance() -> EStore
    + search_product(query: str) -> List[Product]
    + add_product(product: Product) -> None
    + get_product(product_id: str) -> Optional[Product]
    + delete_product(product_id: str) -> bool
    + get_order(order_id: str) -> Optional[Order]
    + process_order(order: Order) -> None
    + get_user(email: str) -> Optional[User]
    + add_user(user: User) -> None
    + save_data() -> None
    + load_data() -> None
}

User <|-- Customer
User <|-- Admin
Customer --> Order
Order --> Payment
Order --> Delivery
Order --> Discount
EStore --> User
EStore --> Product
EStore --> Order
EStore --> Discount
EStore --> Payment
EStore --> Delivery

@enduml
